{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js-advanced-diploma/./src/js/utils.js","webpack://js-advanced-diploma/./src/js/GamePlay.js","webpack://js-advanced-diploma/./src/js/themes.js","webpack://js-advanced-diploma/./src/js/cursors.js","webpack://js-advanced-diploma/./src/js/Team.js","webpack://js-advanced-diploma/./src/js/generators.js","webpack://js-advanced-diploma/./src/js/Character.js","webpack://js-advanced-diploma/./src/js/characters/Bowman.js","webpack://js-advanced-diploma/./src/js/characters/Swordsman.js","webpack://js-advanced-diploma/./src/js/characters/Magician.js","webpack://js-advanced-diploma/./src/js/characters/Daemon.js","webpack://js-advanced-diploma/./src/js/characters/Undead.js","webpack://js-advanced-diploma/./src/js/characters/Vampire.js","webpack://js-advanced-diploma/./src/js/PositionedCharacter.js","webpack://js-advanced-diploma/./src/js/GameStateService.js","webpack://js-advanced-diploma/./src/js/GameState.js","webpack://js-advanced-diploma/./src/js/Mathematic.js","webpack://js-advanced-diploma/./src/js/isStepPossible.js","webpack://js-advanced-diploma/./src/js/GameController.js","webpack://js-advanced-diploma/./src/js/app.js","webpack://js-advanced-diploma/./src/index.js"],"sourcesContent":["/**\n * @todo\n * @param index - индекс поля\n * @param boardSize - размер квадратного поля (в длину или ширину)\n * @returns строка - тип ячейки на поле:\n *\n * @example\n * ```js\n * */\nexport function calcTileType(index, boardSize) {\n  const topLeft = 0;\n  if (topLeft === index) return 'top-left';\n  const topRight = boardSize - 1;\n  if (topRight === index) return 'top-right';\n  const bottomRight = (boardSize * boardSize) - 1;\n  if (bottomRight === index) return 'bottom-right';\n  const bottomLeft = bottomRight - (boardSize - 1)\n  if (bottomLeft === index) return 'bottom-left';\n  if (index >= 1 && index <= (boardSize - 2)) return 'top';\n  if (index >= (bottomLeft + 1) && index <= (bottomRight - 1)) return 'bottom';\n  if (index % boardSize === 0) return 'left';\n  if ((index + 1) % boardSize === 0) return 'right';\n  return 'center';\n}\n\n\n\n\nexport function calcHealthLevel(health) {\n  if (health < 15) {\n    return 'critical';\n  }\n\n  if (health < 50) {\n    return 'normal';\n  }\n\n  return 'high';\n}\n","import { calcHealthLevel, calcTileType } from './utils';\n\nexport default class GamePlay {\n  constructor() {\n    this.boardSize = 8;\n    this.container = null;\n    this.boardEl = null;\n    this.cells = [];\n    this.cellClickListeners = [];\n    this.cellEnterListeners = [];\n    this.cellLeaveListeners = [];\n    this.newGameListeners = [];\n    this.saveGameListeners = [];\n    this.loadGameListeners = [];\n  }\n\n  bindToDOM(container) {\n    if (!(container instanceof HTMLElement)) {\n      throw new Error('container is not HTMLElement');\n    }\n    this.container = container;\n  }\n\n  /**\n   * Draws boardEl with specific theme\n   *\n   * @param theme\n   */\n  drawUi(theme) {\n    this.checkBinding();\n\n    this.container.innerHTML = `\n      <div class=\"controls\">\n        <button data-id=\"action-restart\" class=\"btn\">New Game</button>\n        <button data-id=\"action-save\" class=\"btn\">Save Game</button>\n        <button data-id=\"action-load\" class=\"btn\">Load Game</button>\n      </div>\n      <div class=\"board-container\">\n        <div data-id=\"board\" class=\"board\"></div>\n      </div>\n    `;\n\n    this.newGameEl = this.container.querySelector('[data-id=action-restart]');\n    this.saveGameEl = this.container.querySelector('[data-id=action-save]');\n    this.loadGameEl = this.container.querySelector('[data-id=action-load]');\n\n    this.newGameEl.addEventListener('click', event => this.onNewGameClick(event));\n    this.saveGameEl.addEventListener('click', event => this.onSaveGameClick(event));\n    this.loadGameEl.addEventListener('click', event => this.onLoadGameClick(event));\n\n    this.boardEl = this.container.querySelector('[data-id=board]');\n\n    this.boardEl.classList.add(theme);\n    for (let i = 0; i < this.boardSize ** 2; i += 1) {\n      const cellEl = document.createElement('div');\n      cellEl.classList.add('cell', 'map-tile', `map-tile-${calcTileType(i, this.boardSize)}`);\n      cellEl.addEventListener('mouseenter', event => this.onCellEnter(event));\n      cellEl.addEventListener('mouseleave', event => this.onCellLeave(event));\n      cellEl.addEventListener('click', event => this.onCellClick(event));\n      this.boardEl.appendChild(cellEl);\n    }\n\n    this.cells = Array.from(this.boardEl.children);\n  }\n\n  /**\n   * Draws positions (with chars) on boardEl\n   *\n   * @param positions array of PositionedCharacter objects\n   */\n  redrawPositions(positions) {\n    for (const cell of this.cells) {\n      cell.innerHTML = '';\n    }\n\n    for (const position of positions) {\n      const cellEl = this.boardEl.children[position.position];\n      const charEl = document.createElement('div');\n      charEl.classList.add('character', position.character.type);\n\n      const healthEl = document.createElement('div');\n      healthEl.classList.add('health-level');\n\n      const healthIndicatorEl = document.createElement('div');\n      healthIndicatorEl.classList.add('health-level-indicator', `health-level-indicator-${calcHealthLevel(position.character.health)}`);\n      healthIndicatorEl.style.width = `${position.character.health}%`;\n      healthEl.appendChild(healthIndicatorEl);\n\n      charEl.appendChild(healthEl);\n      cellEl.appendChild(charEl);\n    }\n  }\n\n  /**\n   * Add listener to mouse enter for cell\n   *\n   * @param callback\n   */\n  addCellEnterListener(callback) {\n    this.cellEnterListeners.push(callback);\n  }\n\n  /**\n   * Add listener to mouse leave for cell\n   *\n   * @param callback\n   */\n  addCellLeaveListener(callback) {\n    this.cellLeaveListeners.push(callback);\n  }\n\n  /**\n   * Add listener to mouse click for cell\n   *\n   * @param callback\n   */\n  addCellClickListener(callback) {\n    this.cellClickListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"New Game\" button click\n   *\n   * @param callback\n   */\n  addNewGameListener(callback) {\n    this.newGameListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"Save Game\" button click\n   *\n   * @param callback\n   */\n  addSaveGameListener(callback) {\n    this.saveGameListeners.push(callback);\n  }\n\n  /**\n   * Add listener to \"Load Game\" button click\n   *\n   * @param callback\n   */\n  addLoadGameListener(callback) {\n    this.loadGameListeners.push(callback);\n  }\n\n  onCellEnter(event) {\n    event.preventDefault();\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellEnterListeners.forEach(o => o.call(null, index));\n  }\n\n  onCellLeave(event) {\n    event.preventDefault();\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellLeaveListeners.forEach(o => o.call(null, index));\n  }\n\n  onCellClick(event) {\n    const index = this.cells.indexOf(event.currentTarget);\n    this.cellClickListeners.forEach(o => o.call(null, index));\n  }\n\n  onNewGameClick(event) {\n    event.preventDefault();\n    this.newGameListeners.forEach(o => o.call(null));\n  }\n\n  onSaveGameClick(event) {\n    event.preventDefault();\n    this.saveGameListeners.forEach(o => o.call(null));\n  }\n\n  onLoadGameClick(event) {\n    event.preventDefault();\n    this.loadGameListeners.forEach(o => o.call(null));\n  }\n\n  static showError(message) {\n    alert(message);\n  }\n\n  static showMessage(message) {\n    alert(message);\n  }\n\n  selectCell(index, color = 'yellow') {\n    this.deselectCell(index);\n    this.cells[index].classList.add('selected', `selected-${color}`);\n  }\n\n  deselectCell(index) {\n    const cell = this.cells[index];\n    cell.classList.remove(...Array.from(cell.classList)\n      .filter(o => o.startsWith('selected')));\n  }\n\n  showCellTooltip(message, index) {\n    this.cells[index].title = message;\n  }\n\n  hideCellTooltip(index) {\n    this.cells[index].title = '';\n  }\n  \n  showDamage(index, damage) {\n    return new Promise((resolve) => {\n      const cell = this.cells[index];\n      const damageEl = document.createElement('span');\n      damageEl.textContent = damage;\n      damageEl.classList.add('damage');\n      cell.appendChild(damageEl);\n\n      damageEl.addEventListener('animationend', () => {\n        cell.removeChild(damageEl);\n        resolve();\n      });\n    });\n  }\n\n  setCursor(cursor) {\n    this.boardEl.style.cursor = cursor;\n  }\n\n  checkBinding() {\n    if (this.container === null) {\n      throw new Error('GamePlay not bind to DOM');\n    }\n  }\n}\n","const themes = {\n  prairie: 'prairie',\n  desert: 'desert',\n  arctic: 'arctic',\n  mountain: 'mountain',\n};\n\nexport default themes;\n","const cursors = {\n  auto: 'auto',\n  pointer: 'pointer',\n  crosshair: 'crosshair',\n  notallowed: 'not-allowed',\n};\n\nexport default cursors;\n","/**\n * Класс, представляющий персонажей команды\n *\n * @todo Самостоятельно продумайте хранение персонажей в классе\n * */\nexport default class Team {\n  constructor() {\n    this.characters = [];\n\n  }\n\n  add(character) {\n    this.characters.push(character);\n  }\n\n  // remove(character) {\n  //   const index = this.characters.indexOf(character);\n  //   if (index !== -1) {\n  //     this.characters.splice(index, 1);\n  //   }\n  // }\n}\n","import Team from './Team';\n\n/**\n * Формирует экземпляр персонажа из массива allowedTypes со\n * случайным уровнем от 1 до maxLevel\n *\n * @param allowedTypes массив классов\n * @param maxLevel максимальный возможный уровень персонажа\n * @returns генератор, который при каждом вызове\n * возвращает новый экземпляр класса персонажа\n *\n */\nexport function* characterGenerator(allowedTypes, maxLevel) {\n  while (true) {\n    const randomClass = allowedTypes[Math.floor(Math.random() * allowedTypes.length)];\n    const randomLevel = Math.ceil(Math.random() * maxLevel);\n    yield new randomClass(randomLevel);\n  }\n}\n\n\n/**\n * Формирует массив персонажей на основе characterGenerator\n * @param allowedTypes массив классов\n * @param maxLevel максимальный возможный уровень персонажа\n * @param characterCount количество персонажей, которое нужно сформировать\n * @returns экземпляр Team, хранящий экземпляры персонажей. Количество персонажей в команде - characterCount\n * */\n\nexport function generateTeam(allowedTypes, maxLevel, characterCount) {\n  const team = new Team();\n  for (let i = 0; i < characterCount; i++) {\n    const playerGenerator = characterGenerator(allowedTypes, maxLevel);\n    const character = playerGenerator.next().value;\n    team.add(character);\n  }\n  return team;\n}\n","/**\n * Базовый класс, от которого наследуются классы персонажей\n * @property level - уровень персонажа, от 1 до 4\n * @property attack - показатель атаки\n * @property defence - показатель защиты\n * @property health - здоровье персонажа\n * @property type - строка с одним из допустимых значений:\n * swordsman\n * bowman\n * magician\n * daemon\n * undead\n * vampire\n */\nexport default class Character {\n  constructor(level, type = 'generic') {\n    if (this.constructor === Character) {\n      throw new Error('class \"Character\" cannot be instantiated directly');\n    }\n    if (type === 'generic') {\n      throw new Error('Class \"Character\" cannot be instantiated with type \"generic\"');\n    }\n    this.level = level;\n    this.attack = 0;\n    this.defence = 0;\n    this.health = 50;\n    this.type = type;\n  }\n}\n","import Character from \"../Character\"\n\nexport default class Bowman extends Character {\n    constructor(level, type = 'bowman', health) {\n        super(level, type, health) ;\n        if (level < 1 || level > 4) {\n            throw new Error('error level');\n        }\n      this.attack = 25;\n      this.defence = 25;\n    }\n  }","import Character from \"../Character\"\n\nexport default class Swordsman extends Character {\n    constructor(level, type = 'swordsman', health) {\n        super(level, type, health) ;\n        if (level < 1 || level > 4) {\n            throw new Error('error level');\n        }\n      this.attack = 40;\n      this.defence = 10;\n    }\n  }","import Character from \"../Character\"\n\nexport default class Magician extends Character {\n    constructor(level, type = 'magician', health) {\n        super(level, type, health) ;\n        if (level < 1 || level > 4) {\n            throw new Error('error level');\n        }\n      this.attack = 10;\n      this.defence = 40;\n    }\n  }","import Character from \"../Character\"\n\nexport default class Daemon extends Character {\n    constructor(level, type = 'daemon', health) {\n        super(level, type, health) ;\n        if (level < 1 || level > 4) {\n            throw new Error('error level');\n        }\n      this.attack = 10;\n      this.defence = 10;\n    }\n  }","import Character from \"../Character\"\n\nexport default class Undead extends Character {\n    constructor(level, type = 'undead', health) {\n        super(level, type, health) ;\n        if (level < 1 || level > 4) {\n            throw new Error('error level');\n        }\n      this.attack = 40;\n      this.defence = 10;\n    }\n  }","import Character from \"../Character\"\n\nexport default class Vampire extends Character {\n    constructor(level, type = 'vampire', health) {\n        super(level, type, health) ;\n        if (level < 1 || level > 4) {\n            throw new Error('error level');\n        }\n      this.attack = 25;\n      this.defence = 25;\n    }\n  }","import Character from './Character';\n\nexport default class PositionedCharacter {\n  constructor(character, position) {\n    if (!(character instanceof Character)) {\n      throw new Error('character must be instance of Character or its children');\n    }\n\n    if (typeof position !== 'number') {\n      throw new Error('position must be a number');\n    }\n\n    this.character = character;\n    this.position = position;\n  }\n}\n","export default class GameStateService {\n  constructor(storage) {\n    this.storage = storage;\n  }\n\n  save(state) {\n    this.storage.setItem('state', JSON.stringify(state));\n  }\n\n  load() {\n    try {\n      return JSON.parse(this.storage.getItem('state'));\n    } catch (e) {\n      throw new Error('Invalid state');\n    }\n  }\n}\n","import GameStateService from \"./GameStateService\";\n\nexport default class GameState {\n  constructor() {\n    this.currentPlayer = \"player\";\n    this.level = 1;\n    this.gameStateService = new GameStateService(localStorage)\n  }\n\n  сhangeСurrentPlayer() { \n    this.currentPlayer = (this.currentPlayer === \"player\") ? \"opponent\" : \"player\";\n  }\n\n  levelUp(){\n    if (this.level === 4) return;\n    this.level += 1;\n    this.currentPlayer = \"player\";\n  }\n\n  load(){\n    return this.gameStateService.load()\n  }\n\n  static from(object) {\n    // TODO: create object\n    return null;\n  }\n}\n","export default class Mathematic {\n    static levelUp(character, level) {\n      let health = 0;\n      let attack = 0;\n      let defence = 0;\n      for (let i = 0; i < level; i++) {\n        health = Math.min(character.health + 80, 100);\n        attack = Number((Math.max(character.attack, character.attack * (80 + character.health) / 100)).toFixed(0));\n        defence = Number((Math.max(character.defence, character.defence * (80 + character.health) / 100)).toFixed(0));\n      }\n      return {health, attack, defence};\n    }\n  }","/**\n * @param index - индекс поля для перемещения\n * @param position - позиция игрока/противника\n * @maxDistance - максимальная дистанция одного хода для игрока/противника\n * */\n\n\nfunction getDistance(position, index) {\n  const x1 = position % 8;\n  const y1 = Math.floor(position / 8);\n  const x2 = index % 8;\n  const y2 = Math.floor(index / 8);\n  const distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  return distance;\n}\n\nexport function isStepPossible(position, index, maxDistance) {\n    const distance = getDistance(position, index).toFixed(0);\n    if(maxDistance === 4){\n        if (distance === 0 || distance - 2 > maxDistance) {\n            return false;\n        }\n    }\n    if(maxDistance === 2){\n        if (distance === 0 || distance - 1 > maxDistance) {\n            return false;\n        }\n    }\n    if(maxDistance === 1){\n        if (distance === 0 || distance  > maxDistance) {\n            return false;\n        }\n    }\n    const x1 = position % 8;\n    const y1 = Math.floor(position / 8);\n    const x2 = index % 8;\n    const y2 = Math.floor(index / 8);\n    const dx = Math.abs(x1 - x2);\n    const dy = Math.abs(y1 - y2);\n    if (dx > maxDistance || dy > maxDistance) {\n      return false;\n    }\n    if (dx === 0 && dy === 0) {\n      return false;\n    }\n    const stepX = x1 < x2 ? 1 : x1 > x2 ? -1 : 0;\n    const stepY = y1 < y2 ? 1 : y1 > y2 ? -1 : 0;\n    let currentX = x1 + stepX;\n    let currentY = y1 + stepY;\n    let steps = 1;\n    while (currentX !== x2 || currentY !== y2) {\n      if (currentX < 0 || currentX > 7 || currentY < 0 || currentY > 7) {\n        return false;\n      }\n      currentX += stepX;\n      currentY += stepY;\n      steps++;\n      if (steps > maxDistance) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  export function isPossibleStepsIndex(position, maxDistance){\n    let arrOfSteps = [1, -1, 7, 8, 9, -7, -8, -9];\n    if(maxDistance === 1){\n      const possibleStepsIndex = [];\n      arrOfSteps.forEach(el => possibleStepsIndex.push(position + el));\n      return possibleStepsIndex;\n    }\n    if(maxDistance === 2){\n      arrOfSteps = [...arrOfSteps, ...arrOfSteps.map(el => el * 2)];\n      const possibleStepsIndex = [];\n      arrOfSteps.forEach(el => possibleStepsIndex.push(position + el));\n      return possibleStepsIndex;\n    }\n    if(maxDistance === 4){\n      arrOfSteps = [\n        ...arrOfSteps, \n        ...arrOfSteps.map(el => el * 2), \n        ...arrOfSteps.map(el => el * 3), \n        ...arrOfSteps.map(el => el * 4), \n      ];\n      const possibleStepsIndex = [];\n      arrOfSteps.forEach(el => possibleStepsIndex.push(position + el));\n      return possibleStepsIndex;\n    }\n  }","import themes from \"./themes\";\nimport cursors from \"./cursors\";\nimport { generateTeam } from './generators';\nimport Bowman from './characters/Bowman';\nimport Swordsman from './characters/Swordsman';\nimport Magician from './characters/Magician';\nimport Daemon from './characters/Daemon';\nimport Undead from './characters/Undead';\nimport Vampire from './characters/Vampire';\nimport PositionedCharacter from './PositionedCharacter';\nimport GamePlay from \"./GamePlay\";\nimport GameState from \"./GameState\";\n\nimport Mathematic from \"./Mathematic\";\nimport { isStepPossible, isPossibleStepsIndex } from \"./isStepPossible\";\n\nexport default class GameController {\n  constructor(gamePlay, stateService) {\n    this.gamePlay = gamePlay;\n    this.stateService = stateService;\n    this.positionsTeams = [];\n    this.positions = [];\n    this.team = null;\n    this.opponent = null;\n    this.selectedCellIndex = null;\n    this.selectedCharacter = null;\n    this.mouseEnterCell = null;\n    this.possibleStep = null;\n    this.possibleAttack = null;\n    this.numberOfCharacters = 2;\n    this.gameState = new GameState();\n\n    this.setEventOnCell = this.setEventOnCell.bind(this);\n    this.toNewGame = this.toNewGame.bind(this);\n    this.onCellClick = this.onCellClick.bind(this);\n    this.onCellEnter = this.onCellEnter.bind(this);\n    this.onCellLeave = this.onCellLeave.bind(this);\n    this.toMouseenterCell = this.toMouseenterCell.bind(this);\n    this.resetOptions = this.resetOptions.bind(this);\n    this.toStepOfOpponent = this.toStepOfOpponent.bind(this);\n    this.checkPosition = this.checkPosition.bind(this);\n    this.toAttacPlayer = this.toAttacPlayer.bind(this);\n    this.toCharacterRemove = this.toCharacterRemove.bind(this);\n    this.levelUp = this.levelUp.bind(this);\n    this.toSaveGame = this.toSaveGame.bind(this);\n    this.toLoadGame = this.toLoadGame.bind(this);\n  }\n\n  async init() {\n    await this.gamePlay.drawUi(themes.prairie);\n    await this.generateTeams(1, this.numberOfCharacters);\n    await this.setEventOnCell();\n  }\n\n  toNewGame(){\n    this.positionsTeams = [];\n    this.positions = [];\n    this.team = null;\n    this.opponent = null;\n    this.selectedCellIndex = null;\n    this.selectedCharacter = null;\n    this.mouseEnterCell = null;\n    this.possibleStep = null;\n    this.possibleAttack = null;\n    this.numberOfCharacters = 2;\n    this.gameState = new GameState();\n    this.gamePlay.drawUi(themes.prairie);\n    this.generateTeams(1, this.numberOfCharacters);\n  }\n\n  async levelUpInit() {\n    const themeKeys = Object.keys(themes);\n    const currentTheme = themes[themeKeys[this.gameState.level - 1]];\n    await this.gamePlay.drawUi(currentTheme);\n    await this.generateTeams(1, this.numberOfCharacters);\n  }\n\n  toSaveGame(){\n    this.gameState.gameStateService.save({positionsTeams: this.positionsTeams, level: this.gameState.level});\n  }\n\n  toLoadGame(){\n    const state = this.gameState.load();\n    this.positionsTeams = state.positionsTeams;\n    this.gameState.level = state.level;\n    const themeKeys = Object.keys(themes);\n    const currentTheme = themes[themeKeys[this.gameState.level - 1]];\n    this.gamePlay.drawUi(currentTheme);\n    this.gamePlay.redrawPositions(this.positionsTeams);\n  }\n\n  setEventOnCell() {\n    this.gamePlay.addNewGameListener(this.toNewGame)\n    this.gamePlay.addSaveGameListener(this.toSaveGame);\n    this.gamePlay.addLoadGameListener(this.toLoadGame);\n    this.gamePlay.addCellEnterListener(this.onCellEnter);\n    this.gamePlay.addCellLeaveListener(this.onCellLeave);\n    this.gamePlay.addCellClickListener(this.onCellClick);\n  }\n\n  async handlePossibleStep(index) {\n    this.positionsTeams = this.positionsTeams.filter(char => char.position !== this.selectedCellIndex);\n    this.selectedCharacter.position = index;\n    this.positionsTeams.push(this.selectedCharacter);\n    await this.gamePlay.redrawPositions(this.positionsTeams);\n    await this.gamePlay.deselectCell(this.selectedCellIndex);\n    await this.gamePlay.deselectCell(this.mouseEnterCell);\n    await this.resetOptions();\n    await this.gameState.сhangeСurrentPlayer();\n    await this.toStepOfOpponent()\n  }\n  \n  async handlePossibleAttack(index, character) {\n    let playerCharacters = ['bowman', 'swordsman', 'magician'];\n    const attacker = this.selectedCharacter.character\n    const damage =  Number((Math.max(attacker.attack - character.character.defence, attacker.attack * 0.1)).toFixed(1));\n    await this.gamePlay.showDamage(index, damage).then(() => {\n      character.character.health = character.character.health - damage\n      this.gamePlay.redrawPositions(this.positionsTeams);\n      this.gamePlay.deselectCell(this.selectedCellIndex);\n      this.gamePlay.deselectCell(this.mouseEnterCell);\n      if(character.character.health <= 0){\n        this.toCharacterRemove(character);\n      }\n      let opponentTeam = [];\n      opponentTeam = this.positionsTeams.filter(char => !playerCharacters.includes(char.character.type));\n      this.resetOptions();\n      if(opponentTeam.length === 0){\n        this.levelUp(this.positionsTeams);\n        return;\n        }\n        this.gameState.сhangeСurrentPlayer();\n        this.toStepOfOpponent();\n      });\n  }\n\n  async onCellClick(index) {\n    let playerCharacters = ['bowman', 'swordsman', 'magician'];\n    let playersTeam = [];\n    playersTeam = this.positionsTeams.filter(char => playerCharacters.includes(char.character.type));\n    if(playersTeam.length === 0){\n      return;\n    }\n    index = this.gamePlay.cells.indexOf(event.currentTarget);\n    const character = this.positionsTeams.find(char => char.position === index);\n    if(this.possibleStep !== null) {\n      await this.handlePossibleStep(index);\n      this.selectedCellIndex = null;\n      return;\n    }\n    if(this.possibleAttack !== null) {\n      await this.handlePossibleAttack(index, character);\n      this.selectedCellIndex = null;\n      return;\n    }\n    if (!character){\n      await GamePlay.showError(\"there is no player in this cell\");\n      return;\n    };\n    if (!playerCharacters.includes(character.character.type)){\n      await GamePlay.showError(\"this is not your character\");\n      return;\n    }\n    if (this.selectedCellIndex !== null) {\n      await this.gamePlay.deselectCell(this.selectedCellIndex);\n    }\n    await this.gamePlay.selectCell(index);\n    this.selectedCellIndex = character.position;\n    this.selectedCharacter = character;\n    await this.toMouseenterCell();\n  }\n\n  toStepOfOpponent(){\n    if(this.gameState.currentPlayer === \"player\") return;\n    let playerCharacters = ['bowman', 'swordsman', 'magician'];\n    let playerTeam = [];\n    let opponentTeam = [];\n    playerTeam = this.positionsTeams.filter(char => playerCharacters.includes(char.character.type));\n    opponentTeam = this.positionsTeams.filter(char => !playerCharacters.includes(char.character.type));\n    let opponentTeamDistans = [];\n    opponentTeam.forEach(char => {\n      const stepDistans = this.getStepDistance(char.character.type);\n      const attackDistans = this.getAttacDistance(char.character.type);\n      const position = char.position;\n      const character = char.character;\n      opponentTeamDistans.push({attackDistans, stepDistans, position, character});\n    });\n\n    let indexForAttack = null;\n    let opponentCharacter = null;\n    opponentTeamDistans.forEach(opponent => {\n      const possibleAttackIndex = isPossibleStepsIndex(opponent.position, opponent.attackDistans);\n      let arrFromplayerTeamPositions = [];\n      playerTeam.forEach(player => arrFromplayerTeamPositions.push(player.position));\n      const matchingIndexes = possibleAttackIndex.filter(index => arrFromplayerTeamPositions.includes(index));\n      if (matchingIndexes.length !== 0){\n        matchingIndexes.forEach(index => {\n          if(isStepPossible(opponent.position, index, opponent.attackDistans)){\n            indexForAttack = index;\n            opponentCharacter = opponent;\n            return;\n          }\n        })\n      }\n    })\n    if(indexForAttack !== null && opponentCharacter !== null) {\n      this.toAttacPlayer(indexForAttack, opponentCharacter);\n    } else {\n      const maxstepDistansOpponent = opponentTeamDistans.reduce((prev, current) => {\n        return (prev.stepDistans > current.stepDistans) ? prev : current;\n      });\n      let selectedOpponent = this.positionsTeams.filter(char => char.position === maxstepDistansOpponent.position);\n      const possibleStepsIndex = isPossibleStepsIndex(maxstepDistansOpponent.position, maxstepDistansOpponent.stepDistans);\n      this.generateOpponentPosition (possibleStepsIndex, maxstepDistansOpponent.position, maxstepDistansOpponent.stepDistans)\n      .then((nextStep) => {\n        this.positionsTeams = this.positionsTeams.filter(char => char.position !== selectedOpponent[0].position);\n        selectedOpponent[0].position = nextStep\n        this.positionsTeams.push(selectedOpponent[0]);\n        this.gamePlay.redrawPositions(this.positionsTeams);\n        this.gameState.сhangeСurrentPlayer();\n        return;\n      })\n    }\n  }\n\n  async toAttacPlayer(index, opponent){\n    const player = this.positionsTeams.filter(char => char.position === index);\n    const attacker = opponent.character\n    const damage =  Number((Math.max(attacker.attack - player[0].character.defence, attacker.attack * 0.1)).toFixed(1));\n    await this.gamePlay.showDamage(player[0].position, damage).then(() => {\n      player[0].character.health = player[0].character.health - damage\n      this.gamePlay.redrawPositions(this.positionsTeams);\n      if(player[0].character.health <= 0){\n        this.toCharacterRemove(player[0]);\n      }\n      this.gameState.сhangeСurrentPlayer();\n  })\n  }\n\n  checkPosition(index){\n    let positions = [];\n    this.positionsTeams.forEach( char => {\n      positions.push(char.position)\n    })\n    if(positions.includes(index)){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  async generateOpponentPosition (possibleStepsIndex, position, maxDistance) {\n    let randomIndex;\n    do {\n      randomIndex = Math.floor(Math.random() * possibleStepsIndex.length);\n    } while(!isStepPossible(position, randomIndex, maxDistance) || !this.checkPosition(randomIndex));\n    return randomIndex;\n  }\n\n  resetOptions() {\n    this.possibleStep = null;\n    this.possibleAttack = null;\n    this.selectedCellIndex = null;\n    this.selectedCharacter = null;\n    this.mouseEnterCell = null;\n  }\n\n  async toCharacterRemove(character){\n    this.positionsTeams = this.positionsTeams.filter(char => char !== character);\n    await this.gamePlay.redrawPositions(this.positionsTeams);\n    return;\n  }\n\n  toMouseenterCell(){\n    this.gamePlay.cells.forEach(cell => cell.addEventListener(\"mouseenter\", () => {\n      const index = this.gamePlay.cells.indexOf(event.currentTarget);\n      if (this.mouseEnterCell !== null) {\n        this.gamePlay.deselectCell(this.mouseEnterCell);\n      }\n      if (this.selectedCellIndex === null) return;\n      this.gamePlay.selectCell(this.selectedCellIndex);\n      this.mouseEnterCell = index;\n      const character = this.positionsTeams.find(char => char.position === index);\n      let playerCharacters = ['bowman', 'swordsman', 'magician'];\n      if (character && playerCharacters.includes(character.character.type) && index === character.position){\n        this.gamePlay.setCursor(cursors.pointer);\n        this.possibleStep = null;\n        this.possibleAttack = null;\n        return;\n      } else if (character && !playerCharacters.includes(character.character.type) && index === character.position){\n        const maxDistanceAttac = this.getAttacDistance(this.selectedCharacter.character.type);\n        const possibleAttac = isStepPossible(this.selectedCellIndex, index, maxDistanceAttac);\n        if(possibleAttac) {\n          this.gamePlay.setCursor(cursors.crosshair);\n          this.gamePlay.selectCell(index, 'red');\n          this.possibleAttack = index;\n          this.possibleStep = null;\n          return;\n        } else {\n          this.gamePlay.setCursor(cursors.notallowed);\n          this.possibleStep = null;\n          this.possibleAttack = null;\n          return;\n        }\n      } else {\n        const maxDistanceStep = this.getStepDistance(this.selectedCharacter.character.type);\n        const possibleStep = isStepPossible(this.selectedCellIndex, index, maxDistanceStep);\n        if(possibleStep){\n          this.gamePlay.setCursor(cursors.pointer);\n          this.gamePlay.selectCell(index, 'green');\n          this.possibleStep = index;\n          this.possibleAttack = null;\n          return;\n        } else {\n          this.gamePlay.setCursor(cursors.notallowed);\n          this.possibleStep = null;\n          this.possibleAttack = null;\n          return;\n        }\n      }\n    }))\n  }\n\n  getAttacDistance(characterType){\n    if(characterType === 'swordsman' || characterType === 'undead'){\n      return 1;\n    } else if (characterType === 'bowman' || characterType === 'vampire'){\n      return 2;\n    } else if (characterType === 'magician' || characterType === 'daemon'){\n      return 4;\n    }\n  }\n\n  getStepDistance(characterType){\n    if(characterType === 'swordsman' || characterType === 'undead'){\n      return 4;\n    } else if (characterType === 'bowman' || characterType === 'vampire'){\n      return 2;\n    } else if (characterType === 'magician' || characterType === 'daemon'){\n      return 1;\n    }\n  }\n\n  getCharacterInfo(character){\n    const {level, attack, defence, health} = character;\n    const emojiLevel = String.fromCodePoint(0x1F396);\n    const emojiAttak = String.fromCodePoint(0x2694);\n    const emojiDefence = String.fromCodePoint(0x1F6E1);\n    const emojiHealth = String.fromCodePoint(0x2764);\n    return `${emojiLevel} ${level} ${emojiAttak} ${attack} ${emojiDefence} ${defence} ${emojiHealth} ${health}`;\n  }\n\n  levelUp(teamPlayers){\n    if(this.gameState.level === 4) {\n      return;\n    }\n    this.gameState.levelUp();\n    this.resetOptions()\n    this.team = null;\n    this.opponent = null;\n    let levelUpCharacters =[];\n    teamPlayers.forEach(character => {\n      character.character.level += 1;\n      const updatedData = Mathematic.levelUp(character.character, character.character.level);\n      character.character.health = updatedData.health;\n      character.character.attack = updatedData.attack;\n      character.character.defence = updatedData.defence;\n      levelUpCharacters.push(character)\n    })\n    let playerCharacters = ['swordsman', 'bowman', 'magician'];\n    let opponentCharacters = ['undead', 'vampire', 'daemon'];\n    this.levelUpInit().then(() => {\n      this.positionsTeams.forEach(char => {\n        if (opponentCharacters.includes(char.character.type)){\n          char.character.level = this.gameState.level;\n          const updatedData = Mathematic.levelUp(char.character, this.gameState.level);\n          char.character.health = updatedData.health;\n          char.character.attack = updatedData.attack;\n          char.character.defence = updatedData.defence;\n        }\n      })\n      for (let i = 0; i < levelUpCharacters.length; i++) {\n        this.positionsTeams.forEach(char => {\n          if (playerCharacters.includes(char.character.type) && char.character.level === 1) {\n            const index = this.positionsTeams.indexOf(char)\n            const position = char.position;\n            this.positionsTeams.splice(index, 1)\n            levelUpCharacters[i].position = position\n            this.positionsTeams.push(levelUpCharacters[i])\n            return;\n          }\n        })\n      }\n      this.positionsTeams = this.positionsTeams.filter((char, index, self) =>\n        index === self.findIndex((c) => (\n          c.position === char.position\n        ))\n      );\n      this.gamePlay.redrawPositions(this.positionsTeams);\n      console.log(this.positionsTeams);\n      })\n  }\n\n  onCellEnter(index) {\n    const character = this.positionsTeams.find(char => char.position === index);\n    if (character) {\n      const message = this.getCharacterInfo(character.character);\n      this.gamePlay.showCellTooltip(message, index);\n    }\n  }\n\n  onCellLeave(index) {\n    this.gamePlay.hideCellTooltip(index);\n  }\n\n  async generatePositionAsync(character) {\n    return new Promise(resolve => {\n      let position = this.generatePosition(character);\n      resolve(position);\n    });\n  }\n\n  async generateTeams(maxLevel, characterCount){\n    const players = [Bowman, Swordsman, Magician];\n    const opponentPlayers = [Daemon, Undead, Vampire];\n    this.team = generateTeam(players, maxLevel, characterCount);\n    this.opponet = generateTeam(opponentPlayers, maxLevel, characterCount);\n    await this.setPositionsAsync(this.team);\n    await this.setPositionsAsync(this.opponet);\n  } \n\n  generatePosition (character) {\n    let playerCharacters = ['bowman', 'swordsman', 'magician'];\n    let position = 0;\n    let random = 2;\n    while((random % 8) !== 0) {\n        if ((random - 1) % 8 === 0) {\n            break;\n        }\n        random = Math.floor(Math.random() * 63);\n    }\n    position = random;\n    if (playerCharacters.includes(character.type)) {\n        return position;\n    } else {\n        return position + 6;\n    }\n  }\n\n  async setPositionsAsync(team) {\n    let promises = team.characters.map(async character => {\n      let position = await this.generatePositionAsync(character);\n      while(this.positions.includes(position)) {\n        position = await this.generatePositionAsync(character);\n      }\n      this.positions.push(position);\n      const positionedCharacter = new PositionedCharacter(character, position);\n      this.positionsTeams.push(positionedCharacter);\n    });\n    await Promise.all(promises);\n    this.gamePlay.redrawPositions(this.positionsTeams);\n  }\n\n}\n","/**\n * Entry point of app: don't change this\n */\nimport GamePlay from './GamePlay';\nimport GameController from './GameController';\nimport GameStateService from './GameStateService';\n\nconst gamePlay = new GamePlay();\ngamePlay.bindToDOM(document.querySelector('#game-container'));\n\nconst stateService = new GameStateService(localStorage);\n\nconst gameCtrl = new GameController(gamePlay, stateService);\ngameCtrl.init();\n\n// don't write your code here\n","import './css/style.css';\nimport './js/app';\n"],"names":["calcTileType","index","boardSize","topLeft","topRight","bottomRight","bottomLeft","calcHealthLevel","health","GamePlay","constructor","container","boardEl","cells","cellClickListeners","cellEnterListeners","cellLeaveListeners","newGameListeners","saveGameListeners","loadGameListeners","bindToDOM","HTMLElement","Error","drawUi","theme","checkBinding","innerHTML","newGameEl","querySelector","saveGameEl","loadGameEl","addEventListener","event","onNewGameClick","onSaveGameClick","onLoadGameClick","classList","add","i","cellEl","document","createElement","onCellEnter","onCellLeave","onCellClick","appendChild","Array","from","children","redrawPositions","positions","cell","position","charEl","character","type","healthEl","healthIndicatorEl","style","width","addCellEnterListener","callback","push","addCellLeaveListener","addCellClickListener","addNewGameListener","addSaveGameListener","addLoadGameListener","preventDefault","indexOf","currentTarget","forEach","o","call","showError","message","alert","showMessage","selectCell","color","arguments","length","undefined","deselectCell","remove","filter","startsWith","showCellTooltip","title","hideCellTooltip","showDamage","damage","Promise","resolve","damageEl","textContent","removeChild","setCursor","cursor","themes","prairie","desert","arctic","mountain","cursors","auto","pointer","crosshair","notallowed","Team","characters","characterGenerator","allowedTypes","maxLevel","randomClass","Math","floor","random","randomLevel","ceil","generateTeam","characterCount","team","playerGenerator","next","value","Character","level","attack","defence","Bowman","Swordsman","Magician","Daemon","Undead","Vampire","PositionedCharacter","GameStateService","storage","save","state","setItem","JSON","stringify","load","parse","getItem","e","GameState","currentPlayer","gameStateService","localStorage","сhangeСurrentPlayer","levelUp","object","Mathematic","min","Number","max","toFixed","getDistance","x1","y1","x2","y2","distance","sqrt","pow","isStepPossible","maxDistance","dx","abs","dy","stepX","stepY","currentX","currentY","steps","isPossibleStepsIndex","arrOfSteps","possibleStepsIndex","el","map","GameController","gamePlay","stateService","positionsTeams","opponent","selectedCellIndex","selectedCharacter","mouseEnterCell","possibleStep","possibleAttack","numberOfCharacters","gameState","setEventOnCell","bind","toNewGame","toMouseenterCell","resetOptions","toStepOfOpponent","checkPosition","toAttacPlayer","toCharacterRemove","toSaveGame","toLoadGame","init","generateTeams","levelUpInit","themeKeys","Object","keys","currentTheme","handlePossibleStep","char","handlePossibleAttack","playerCharacters","attacker","then","opponentTeam","includes","playersTeam","find","playerTeam","opponentTeamDistans","stepDistans","getStepDistance","attackDistans","getAttacDistance","indexForAttack","opponentCharacter","possibleAttackIndex","arrFromplayerTeamPositions","player","matchingIndexes","maxstepDistansOpponent","reduce","prev","current","selectedOpponent","generateOpponentPosition","nextStep","randomIndex","maxDistanceAttac","possibleAttac","maxDistanceStep","characterType","getCharacterInfo","emojiLevel","String","fromCodePoint","emojiAttak","emojiDefence","emojiHealth","teamPlayers","levelUpCharacters","updatedData","opponentCharacters","splice","self","findIndex","c","console","log","generatePositionAsync","generatePosition","players","opponentPlayers","opponet","setPositionsAsync","promises","positionedCharacter","all","gameCtrl"],"sourceRoot":""}